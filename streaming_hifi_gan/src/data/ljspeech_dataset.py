import pathlib

from torch.utils.data import Dataset

VALIDATION_FILENAMES = [
    "LJ050-0269.flac",
    "LJ050-0270.flac",
    "LJ050-0271.flac",
    "LJ050-0272.flac",
    "LJ050-0273.flac",
    "LJ050-0274.flac",
    "LJ050-0275.flac",
    "LJ050-0276.flac",
    "LJ050-0277.flac",
    "LJ050-0278.flac",
    "LJ001-0028.flac",
    "LJ001-0068.flac",
    "LJ002-0149.flac",
    "LJ002-0157.flac",
    "LJ002-0167.flac",
    "LJ003-0042.flac",
    "LJ003-0307.flac",
    "LJ004-0169.flac",
    "LJ004-0233.flac",
    "LJ005-0101.flac",
    "LJ005-0108.flac",
    "LJ005-0202.flac",
    "LJ005-0234.flac",
    "LJ005-0248.flac",
    "LJ006-0001.flac",
    "LJ006-0018.flac",
    "LJ006-0034.flac",
    "LJ006-0078.flac",
    "LJ007-0217.flac",
    "LJ007-0243.flac",
    "LJ008-0087.flac",
    "LJ008-0131.flac",
    "LJ008-0140.flac",
    "LJ008-0158.flac",
    "LJ008-0174.flac",
    "LJ010-0047.flac",
    "LJ010-0061.flac",
    "LJ010-0105.flac",
    "LJ010-0233.flac",
    "LJ010-0234.flac",
    "LJ010-0258.flac",
    "LJ010-0262.flac",
    "LJ010-0270.flac",
    "LJ010-0293.flac",
    "LJ011-0009.flac",
    "LJ011-0256.flac",
    "LJ012-0044.flac",
    "LJ012-0145.flac",
    "LJ013-0020.flac",
    "LJ013-0077.flac",
    "LJ013-0228.flac",
    "LJ014-0020.flac",
    "LJ014-0054.flac",
    "LJ014-0101.flac",
    "LJ014-0103.flac",
    "LJ014-0263.flac",
    "LJ014-0272.flac",
    "LJ014-0311.flac",
    "LJ015-0197.flac",
    "LJ016-0089.flac",
    "LJ016-0407.flac",
    "LJ016-0443.flac",
    "LJ017-0033.flac",
    "LJ017-0038.flac",
    "LJ018-0018.flac",
    "LJ018-0119.flac",
    "LJ018-0280.flac",
    "LJ019-0178.flac",
    "LJ019-0240.flac",
    "LJ021-0049.flac",
    "LJ021-0155.flac",
    "LJ022-0046.flac",
    "LJ022-0173.flac",
    "LJ024-0087.flac",
    "LJ024-0110.flac",
    "LJ024-0119.flac",
    "LJ025-0091.flac",
    "LJ026-0029.flac",
    "LJ026-0039.flac",
    "LJ026-0064.flac",
    "LJ026-0105.flac",
    "LJ026-0137.flac",
    "LJ027-0006.flac",
    "LJ028-0134.flac",
    "LJ028-0138.flac",
    "LJ028-0189.flac",
    "LJ028-0281.flac",
    "LJ029-0188.flac",
    "LJ030-0098.flac",
    "LJ031-0007.flac",
    "LJ031-0091.flac",
    "LJ031-0227.flac",
    "LJ032-0100.flac",
    "LJ032-0165.flac",
    "LJ032-0198.flac",
    "LJ033-0046.flac",
    "LJ033-0072.flac",
    "LJ033-0135.flac",
    "LJ034-0083.flac",
    "LJ034-0179.flac",
    "LJ035-0125.flac",
    "LJ035-0162.flac",
    "LJ035-0189.flac",
    "LJ035-0208.flac",
    "LJ036-0216.flac",
    "LJ037-0093.flac",
    "LJ037-0157.flac",
    "LJ037-0178.flac",
    "LJ037-0219.flac",
    "LJ037-0222.flac",
    "LJ038-0017.flac",
    "LJ038-0052.flac",
    "LJ038-0077.flac",
    "LJ038-0161.flac",
    "LJ038-0212.flac",
    "LJ039-0103.flac",
    "LJ039-0149.flac",
    "LJ040-0107.flac",
    "LJ040-0119.flac",
    "LJ040-0161.flac",
    "LJ040-0169.flac",
    "LJ041-0098.flac",
    "LJ042-0017.flac",
    "LJ042-0070.flac",
    "LJ042-0161.flac",
    "LJ043-0147.flac",
    "LJ043-0178.flac",
    "LJ043-0183.flac",
    "LJ043-0185.flac",
    "LJ044-0057.flac",
    "LJ044-0109.flac",
    "LJ045-0081.flac",
    "LJ045-0147.flac",
    "LJ045-0204.flac",
    "LJ046-0193.flac",
    "LJ046-0244.flac",
    "LJ047-0059.flac",
    "LJ047-0142.flac",
    "LJ048-0035.flac",
    "LJ048-0063.flac",
    "LJ048-0104.flac",
    "LJ048-0187.flac",
    "LJ048-0271.flac",
    "LJ049-0031.flac",
    "LJ049-0059.flac",
    "LJ049-0174.flac",
    "LJ050-0049.flac",
    "LJ050-0113.flac",
    "LJ050-0150.flac",
    "LJ050-0189.flac",
]


class LJSpeechDataset(Dataset):
    """
    LJSpeechのデータセットを扱うクラス
    """

    def __init__(self, train=True):
        self.path = "dataset/resampled/"

        file_list = list(
            pathlib.Path(self.path).rglob(
                "*.flac",
            )
        )
        self.file_list = []
        for f in file_list:
            if train and f.name in VALIDATION_FILENAMES:
                continue
            elif not train and not (f.name in VALIDATION_FILENAMES):
                continue
            self.file_list.append(f)

    def __getitem__(self, index) -> str:
        return str(self.file_list[index])

    def __len__(self) -> int:
        return len(self.file_list)
