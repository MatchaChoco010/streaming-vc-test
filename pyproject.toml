[tool.poetry]
name = "streaming-vc-test"
version = "0.1.0"
description = ""
authors = ["ORITO Itsuki <me@orito-itsuki.net>"]
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.10.6,<3.11"
boto3 = "^1.26.48"
datasets = "^2.8.0"
huggingface-hub = "^0.11.1"
joblib = "^1.2.0"
numpy = "<1.24"
onnx = "^1.13.0"
onnx-graphsurgeon = {version = "^0.3.25", source = "nvidia"}
onnxsim = "^0.4.10"
onnxruntime-gpu = "^1.13.1"
pyaudio = "^0.2.13"
pysoundfile = "^0.9.0.post1"
pyworld = "^0.3.2"
librosa = "^0.10.0.post2"
scikit-learn = "^1.2.1"
soundfile = "^0.12.1"
tensorboard = "^2.11.0"
tensorflow-io = "^0.29.0"
torch-tb-profiler = "^0.4.1"
transformers = "^4.26.1"

[[tool.poetry.dependencies.torch]]
platform = "win32"
url = "https://download.pytorch.org/whl/cu117/torch-2.0.0%2Bcu117-cp310-cp310-win_amd64.whl"

[[tool.poetry.dependencies.torch]]
platform = "linux"
url = "https://download.pytorch.org/whl/cu117/torch-2.0.0%2Bcu117-cp310-cp310-linux_x86_64.whl"

[[tool.poetry.dependencies.torchaudio]]
platform = "win32"
url = "https://download.pytorch.org/whl/cu117/torchaudio-2.0.0%2Bcu117-cp310-cp310-win_amd64.whl"

[[tool.poetry.dependencies.torchaudio]]
platform = "linux"
url = "https://download.pytorch.org/whl/cu117/torchaudio-2.0.0%2Bcu117-cp310-cp310-linux_x86_64.whl"

[[tool.poetry.dependencies.torchvision]]
platform = "win32"
url = "https://download.pytorch.org/whl/cu117/torchvision-0.15.1%2Bcu117-cp310-cp310-win_amd64.whl"

[[tool.poetry.dependencies.torchvision]]
platform = "linux"
url = "https://download.pytorch.org/whl/cu117/torchvision-0.15.1%2Bcu117-cp310-cp310-linux_x86_64.whl"

[tool.poetry.group.dev.dependencies]
black = "^22.12.0"
flake8 = "^6.0.0"
flake8-isort = "^6.0.0"
isort = "^5.11.4"
mypy = "^0.991"
pyproject-flake8 = "^6.0.0.post1"


[[tool.poetry.source]]
name = "nvidia"
url = "https://pypi.ngc.nvidia.com"
default = false
secondary = false

[tool.black]
target-version = ['py310']
line-length = 88

[tool.flake8]
max-line-length = 88
max-complexity = 10

[tool.isort]
line_length = 88
multi_line_output = 3
include_trailing_comma = true

[tool.mypy]
python_version = "3.10"
no_strict_optional = true
ignore_missing_imports = true
check_untyped_defs = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
